#version 120
#include "lighting.glh"

varying vec2 texCoord0;
varying mat3 tbnMatrix;
varying vec3 worldPos0;
varying vec3 eyeVec;

uniform sampler2D diffuse;
uniform sampler2D normalMap;
uniform sampler2D parallaxMap;
uniform float scale;
uniform float bias;
uniform DirectionalLight R_directionalLight;

void main() {
    float height = texture2D(parallaxMap, texCoord0.st).r;
    float v = height * 1 - 0.5;
    vec3 eye = normalize(eyeVec);
    vec2 newCoords = texCoord0 + (v); 

    vec3 normal = normalize(tbnMatrix * (2. * (texture2D(normalMap, newCoords.xy).xyz) - 1.));

    gl_FragColor = texture2D(diffuse, newCoords.xy);// * calcDirectionalLight(R_directionalLight, normal, worldPos0);
}
